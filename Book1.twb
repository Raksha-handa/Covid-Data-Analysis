<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='CovidDeaths$ (PortfolioProject)' inline='true' name='federated.07e92co17m2my011npcc51gp1mcm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.1o2nd560awjbss1gp4g220pcvj16'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1o2nd560awjbss1gp4g220pcvj16' name='GlobalTotal' table='[dbo].[GlobalTotal]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1o2nd560awjbss1gp4g220pcvj16' name='GlobalTotal' table='[dbo].[GlobalTotal]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[GlobalTotal]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GlobalTotal_2A5DF0B0A1434CF9919BCEE5812712E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TotalDeaths]</local-name>
            <parent-name>[GlobalTotal]</parent-name>
            <remote-alias>TotalDeaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GlobalTotal_2A5DF0B0A1434CF9919BCEE5812712E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[GlobalTotal]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GlobalTotal_2A5DF0B0A1434CF9919BCEE5812712E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='GlobalTotal' datatype='table' name='[__tableau_internal_object_id__].[GlobalTotal_2A5DF0B0A1434CF9919BCEE5812712E6]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GlobalTotal' id='GlobalTotal_2A5DF0B0A1434CF9919BCEE5812712E6'>
            <properties context=''>
              <relation connection='sqlserver.1o2nd560awjbss1gp4g220pcvj16' name='GlobalTotal' table='[dbo].[GlobalTotal]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='TotalDeathCountPerContinent (PortfolioProject)' inline='true' name='federated.108mbg419890z21bspjmi1igsvsy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.1s0fggu1ckgsjm1463rrc0hik6xe'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1s0fggu1ckgsjm1463rrc0hik6xe' name='TotalDeathCountPerContinent' table='[dbo].[TotalDeathCountPerContinent]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1s0fggu1ckgsjm1463rrc0hik6xe' name='TotalDeathCountPerContinent' table='[dbo].[TotalDeathCountPerContinent]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[TotalDeathCountPerContinent]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalDeathCountPerContinent_89F1505CB21A472A9F15682B33F64C3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestDeathCount</remote-name>
            <remote-type>3</remote-type>
            <local-name>[HighestDeathCount]</local-name>
            <parent-name>[TotalDeathCountPerContinent]</parent-name>
            <remote-alias>HighestDeathCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalDeathCountPerContinent_89F1505CB21A472A9F15682B33F64C3D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Death Count' datatype='integer' name='[HighestDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='TotalDeathCountPerContinent' datatype='table' name='[__tableau_internal_object_id__].[TotalDeathCountPerContinent_89F1505CB21A472A9F15682B33F64C3D]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='sf_light' type='palette'>
            <map to='#26aba4'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#3296ed'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4ed4cd'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#77b9f2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#c398f5'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='TotalDeathCountPerContinent' id='TotalDeathCountPerContinent_89F1505CB21A472A9F15682B33F64C3D'>
            <properties context=''>
              <relation connection='sqlserver.1s0fggu1ckgsjm1463rrc0hik6xe' name='TotalDeathCountPerContinent' table='[dbo].[TotalDeathCountPerContinent]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='PortfolioProject' inline='true' name='federated.1ym6u3t08ndmmk12v6pm50c2r19g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.18zm8y30quvyty1c4plqq19g6uuq'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.18zm8y30quvyty1c4plqq19g6uuq' name='HighestCaseCounts' table='[dbo].[HighestCaseCounts]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.18zm8y30quvyty1c4plqq19g6uuq' name='HighestCaseCounts' table='[dbo].[HighestCaseCounts]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[HighestCaseCounts]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighestCaseCounts_F35C39450E6B48D680AF7CB0D8BC576B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[HighestCaseCounts]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighestCaseCounts_F35C39450E6B48D680AF7CB0D8BC576B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestCaseCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HighestCaseCount]</local-name>
            <parent-name>[HighestCaseCounts]</parent-name>
            <remote-alias>HighestCaseCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighestCaseCounts_F35C39450E6B48D680AF7CB0D8BC576B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[HighestCaseCounts]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighestCaseCounts_F35C39450E6B48D680AF7CB0D8BC576B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Case Count' datatype='real' name='[HighestCaseCount]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='HighestCaseCounts' datatype='table' name='[__tableau_internal_object_id__].[HighestCaseCounts_F35C39450E6B48D680AF7CB0D8BC576B]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='HighestCaseCounts' id='HighestCaseCounts_F35C39450E6B48D680AF7CB0D8BC576B'>
            <properties context=''>
              <relation connection='sqlserver.18zm8y30quvyty1c4plqq19g6uuq' name='HighestCaseCounts' table='[dbo].[HighestCaseCounts]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='HighCountWithDate (PortfolioProject)' inline='true' name='federated.0agfsxo0k8bu8f19t4dxf1bpf3et' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='.' name='sqlserver.0k0w9sn1mnari415b8ms6003qzqr'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='.' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.0k0w9sn1mnari415b8ms6003qzqr' name='HighCountWithDate' table='[dbo].[HighCountWithDate]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.0k0w9sn1mnari415b8ms6003qzqr' name='HighCountWithDate' table='[dbo].[HighCountWithDate]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[HighCountWithDate]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[HighCountWithDate]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[HighCountWithDate]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestCaseCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HighestCaseCount]</local-name>
            <parent-name>[HighCountWithDate]</parent-name>
            <remote-alias>HighestCaseCount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[HighCountWithDate]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Case Count' datatype='real' name='[HighestCaseCount]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='HighCountWithDate' datatype='table' name='[__tableau_internal_object_id__].[HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='HighCountWithDate' id='HighCountWithDate_561E1395F8154DA29ED34CA55E49B67C'>
            <properties context=''>
              <relation connection='sqlserver.0k0w9sn1mnari415b8ms6003qzqr' name='HighCountWithDate' table='[dbo].[HighCountWithDate]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths$ (PortfolioProject)' name='federated.07e92co17m2my011npcc51gp1mcm' />
          </datasources>
          <datasource-dependencies datasource='federated.07e92co17m2my011npcc51gp1mcm'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[TotalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[TotalDeaths]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalCases]' derivation='Sum' name='[sum:TotalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalDeaths]' derivation='Sum' name='[sum:TotalDeaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07e92co17m2my011npcc51gp1mcm].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07e92co17m2my011npcc51gp1mcm].[sum:TotalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07e92co17m2my011npcc51gp1mcm].[sum:TotalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]' direction='ASC' />
          <slices>
            <column>[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='78' />
            <format attr='width' field='[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]' value='188' />
            <format attr='text-format' field='[federated.07e92co17m2my011npcc51gp1mcm].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.07e92co17m2my011npcc51gp1mcm].[Multiple Values]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]' value='32' />
            <format attr='background-color' field='[federated.07e92co17m2my011npcc51gp1mcm].[sum:TotalCases:qk]' value='#ffffff' />
            <format attr='band-color' scope='cols' value='#dfedeb' />
            <format attr='background-color' scope='cols' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.07e92co17m2my011npcc51gp1mcm].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.3756906986236572' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F2115115-AC09-4B7B-96C4-52A9C677CD0D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalDeathCountPerContinent (PortfolioProject)' name='federated.108mbg419890z21bspjmi1igsvsy' />
          </datasources>
          <datasource-dependencies datasource='federated.108mbg419890z21bspjmi1igsvsy'>
            <column caption='Highest Death Count' datatype='integer' name='[HighestDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[HighestDeathCount]' derivation='Sum' name='[sum:HighestDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]' direction='DESC' using='[federated.108mbg419890z21bspjmi1igsvsy].[sum:HighestDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]' value='165' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.108mbg419890z21bspjmi1igsvsy].[sum:HighestDeathCount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4282872676849365' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.108mbg419890z21bspjmi1igsvsy].[sum:HighestDeathCount:qk]</rows>
        <cols>[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{2A88DCBC-F941-4CC0-A5A4-19D165D0F9D3}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PortfolioProject' name='federated.1ym6u3t08ndmmk12v6pm50c2r19g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ym6u3t08ndmmk12v6pm50c2r19g'>
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Latitude (generated)]</column>
            <column>[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Longitude (generated)]' field-type='quantitative' max='22930039.219213311' min='-23558801.687602181' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Latitude (generated)]' field-type='quantitative' max='20278501.812004246' min='-9126324.2767867111' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[none:location:nk]' />
              <color column='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Latitude (generated)]</rows>
        <cols>[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9EB95D44-6894-4295-A264-12AF8842BB1B}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Case Count curve</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='HighCountWithDate (PortfolioProject)' name='federated.0agfsxo0k8bu8f19t4dxf1bpf3et' />
          </datasources>
          <datasource-dependencies datasource='federated.0agfsxo0k8bu8f19t4dxf1bpf3et'>
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[tdy:date:qk]' value='95' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]' />
              <text column='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]' />
              <color column='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:Forecast Indicator:nk]' />
              <text column='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Month-Trunc' range-size='6' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{41D51FDE-A0BD-43A0-B061-FB3EBD722C54}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='60627' id='11' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='60627' id='8' param='horz' type-v2='layout-flow' w='89378' x='483' y='929'>
              <zone h='60627' id='6' type-v2='layout-basic' w='89378' x='483' y='929'>
                <zone h='20674' id='3' name='Sheet 1' w='44689' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='60627' id='9' name='Sheet 3' w='44689' x='45172' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39953' id='13' name='Sheet 2' w='35032' x='483' y='21603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='39953' id='14' name='Sheet 2' pane-specification-id='0' param='[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]' type-v2='color' w='9657' x='35515' y='21603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='60627' id='10' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='929'>
              <zone h='8478' id='12' name='Sheet 3' pane-specification-id='2' param='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='37515' id='15' name='Sheet 4' w='89377' x='483' y='61556'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='37515' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]&#10;[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:Forecast Indicator:nk]' type-v2='color' w='9657' x='89860' y='61556'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='158' h='20674' id='3' is-fixed='true' name='Sheet 1' w='44689' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60627' id='9' is-fixed='true' name='Sheet 3' w='44689' x='45172' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='12' name='Sheet 3' pane-specification-id='2' param='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39953' id='13' is-fixed='true' name='Sheet 2' w='35032' x='483' y='21603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='39953' id='14' name='Sheet 2' pane-specification-id='0' param='[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]' type-v2='color' w='9657' x='35515' y='21603'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37515' id='15' is-fixed='true' name='Sheet 4' w='89377' x='483' y='61556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37515' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]&#10;[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:Forecast Indicator:nk]' type-v2='color' w='9657' x='89860' y='61556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B8A6BCA2-08A7-47D1-84B6-139A95580871}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07e92co17m2my011npcc51gp1mcm].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD85654E-1100-45B9-A5AF-B70EBD58E7E0}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3159E10C-448A-4138-86E0-FD837FB29A05}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[attr:location:nk]</field>
            <field>[federated.1ym6u3t08ndmmk12v6pm50c2r19g].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{25FB10C0-CC05-4FEC-8710-546F3DA42708}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='229'>
            <card pane-specification-id='0' param='[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]&#10;[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:Forecast Indicator:nk]</field>
            <field>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]</field>
            <field>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF7202E2-C792-4C18-963C-06481BC8C8DC}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.108mbg419890z21bspjmi1igsvsy].[none:continent:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:Forecast Indicator:nk]</field>
              <field>[federated.0agfsxo0k8bu8f19t4dxf1bpf3et].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{270B908E-9D79-4421-A874-5A52E2673080}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='114' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAByCAYAAAAF3t55AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAR70lEQVR4nO3de1wXVcLH8c8+P2QBoUcRAREDxMiWpKyt8MFlCUURC5EUDS+BkpbkJTDT
      UpbdtNS80KqbAorKLUDJSyreiY289BCmFUiAED8EfrDELggsME/PH6Ag8ruALpZz3n/5mpkz
      58z5zXfmzJlRf/Pzzz//jCDI1H/d7wYIwv0kAiDImgiAIGsiAIKsiQAIsiYCIMiaCIAga3ra
      NiiqruqNdgjCfSHuAIKsiQAIsiYCIMiaCIAgayIAgqyJAAiyJgIgyJoIgCBrIgCCrIkACLKm
      9VMI4ZfrelIwi3YWqFlrz4xd25hs/R9uhDKZpXN2YfPnNBaOUrONVEPOZ5HExn9JXk0jesbW
      PDY+iDfmOzPgP9w8bUQAfsWspm1j37TWP7eGwY63TyzlmW7v6TxbxoVTPDeaDdPudWKUnF71
      FlHFTszbkMh7DxtCQwnnP86gGBEA4QFXdzqaqP81ZdquFbjfzJbhEFxCZtzXdt0kAiADUs23
      HIqI4MBFJTdaDLAY6UvQihmM7KeAcxuY8qdTrRvuDGLKTmgfPtWT/9lWdiVcpLCqjhb06Dvk
      WXxC32Ty70x0qLmaL4+fp2XUW3iqvbHoUEdtDp9u3NjWfj36DhmBe+ASZo62QAEgVXB+61qi
      Tufwz8bulRcBeNBJl9k9fxnnHENYd2AcllSRGbGQNfP/wTsxb/LUqKXsOzFazRDon1TW2PLS
      mgU42RnTp6m17OZVe7BPfgMnhbbK87h6CWznPoqh2m201/Hd3jDiK7xZt98fe0OJumvniU8+
      T8XoSVhRz9cfLWF7+VRWJW3A3lCi/Oj7LF+6mr571jFuoObyYhboAVdzLJ5jtS4ELB2HpT6g
      b4ZL6GL+WHucQ2eqtZQexKiZfjxtZ0wf2sr6jGNgbQ4FZfeqhdrrqL9RC6YWWBgqAH2M7VyZ
      //YkrACqz3Io7b95MdgX+7b1ll7+eAz4hi8vVGstL+4AD7jCvO/AZjZDjTosVFhjbQOff58H
      LzhrLF/3/SF27Ugm64cqbrTcXGp/T9uorY7Hn/fC7E+bmP/KWf7gNYExY5x5xEy/dWVBHrkU
      8e2rniR22q/tjXrAVGN5EQBBvcojbFgaSeOU1Wz+8ElM9Wmb9vxcxx048OiT8Pn3V2nAuuth
      kA51GD6ziG37p1P4VTqnj8QQvnM9Jp4r2RDijHGLRAu2vBy1nZdsum6FpvJiCPSAG+rgCMVX
      KazvsLA+n/xiePx3DpoL5+fwbctofF5pOzG7zZSnXJ9A71wqacq7q0NhaM4jrn68ti6GHWGj
      aUxL5GwZYGvHMIrIvlSpsSXqyosAPOD6TZjBBJNMdm84QXkT0FRF5tYdXDAZj7e7adtWrVdq
      5Rd/p6gJkJpolgBzCwaRxbkvapBoou5aBjvWJqPuXO6K2QsLme1YStLbH3DmxwYkoLnuGpmb
      4vkaXepQcnTdeo5dUtEgATTR9G8AA377W2DQOLxG6ZG7YzXxl6poBmiqo/h8LHEny7SWF0Og
      B53CiYAdGzCNiOBtn023pkHf3TGDkbeeC0wZE7qSa+9FsPyFPbQYOPHqjvWMt/fhjZlXeH/d
      dKatM8b+j7OZs8CPH5boOgQCsMZrw27s9v2VqKUv87eOb4IBtNYxiGfG2JIYs4i4nBr+Dfy2
      32O4hi1njCmACa5hO9HfupaosJl82gh6xmYMfc4bvwBzAI3lf6PtX4cW/yqE8CATQyBB1kQA
      BFkTARBkTQRAkDURAEHWRAAEWRMBEGRNBECQNREAQda0fgpRVVjUC80QhPtD66cQdVV1vdUW
      Qeh1YggkyJoIgCBrIgCCrIkACLImAiDImgiAIGsiAIKsiQAIsiYCIMiaCIAgayIAgqyJAAiy
      JgIgyJoIgCBrIgCCrIkACLImAiDImgiAIGsiAIKsiQAIsiYCIMiaCIAgayIAgqyJAAiyJgIg
      yJoIgCBrIgCCrIkACLImAiDI2n37n+Kbrp8lekssJ3MK+akR0DNh4CPOTJ4ewJTnBqOvtmAp
      Z3dvIvbMdxTWNAIG9Le05/deMwnwGcVgtQXVtSGGY1d+pLYFDPo58gf/+SyY6ER/hW77KNn/
      GnOicmlmGPOio/G3vnObC5s9ePt4s/qdjF1D+lKXbra7G30n/URe5jEOHzvF+R9KqKxrBvpg
      YuaAs5/6472+/zX8o3LVN8R+HrHb/Bmipb0lyUHM2pWvw5GNZ03aClwAlAkEBUWiU6nwdFY4
      d1jw1Xo8Vh1FfY+313MfAiBRtH8Jr8VU8OTsFWwPc8LCUAFNtRRmx7H5gwAO/DGc6DddeKhz
      yYqT/HnJeoqfDWH5X1fjYG6IQmqg5sdLHE3Zzb5vRrH4GR3bcGQ5IR+rcF4WTsKfh2Ki30Tt
      tUw+fj8Uv9OBRG3yx1ZbCCoPsSkWXg2fx4nwM2o2qqaivJlhc2KJ9tN2qujQ7m733XWSQ14h
      9v88mRO0kgB7awYY6wOtxxu5fhl+Ke6E/20ZLia316ZSlXY7nF0Z4hdNup+mLVSkhvrxcb9n
      GXlzkbU/0Wn+GverOrQQv8j+POt0+/JqVRnNOoaz94dAlQfZGFWEy/Jo1vqNbP0BAfRNGPrc
      60R8NJuHjq9l2/n628tJuex6Zz2qyVHsenMCj5kbogBQGNLPbhT+y3boePIDyiRWbyngmZVb
      WOY6FBN9AH1M7J5n2aZw3FWRhEReQtK4k3+RsTOKyklLeKmLq347FRXlYGNlpWPjNOhR3/XD
      9e1kDmwJZfITQ9tOfrh5vKFbI/DTP8rGxCudKqunsqIWu8GD777dWkh5B0n9zpQXJ7lhpHOh
      XA4evILpRF/cOhVSqcpgiDW69HivB6D+chZX+B/cR3e+vrdS2Ljhbl/Ll9l5ty1XHdlGvEEg
      7/rZouPoRK1LhxPJd5zJXOcu2mDiQnDgc1QfSSW9/s7VN9V/tZ2IbzxYOnu45vbUl1BUYYml
      +d22uqd9Z4SlVX/1bVQMx2OsHdXfXKHkthU/UnQNrMzN77rdmtWTnpSM0nEm051076P6vyeQ
      XDqCmVOe7HRs9ZQUl2NpYa7TeXKfHoJbkNReXiUkCfoaGHRYls+Rg1cY6eWp9ZamXQnff1uL
      3e+fQt1P+9Dosbi0ZHDmnJoESJeI3nSSx4ICeFLrMKmc6wzCwuxu2txRd/uuhyQV5RUmWAzU
      +ZrcMwVJxGQaMH6qp9rf4075JMVmYDB2Op4DO69TUV4Og3QMbq8HwGiUN179M/j0SFmXQwwp
      7yTHi4bh7TG8fWHZ11woteOpx03vWTsUCg1nrtEjDLeFy3l5XayUyN27gcMPL2TxmK6vxLcp
      U3INcwbcg6b3qO+0kXI5eeoaJo89evuQoUxJMRaY3bsu76pyso6lohzsy1Rn3YMmZR8mtdQa
      38kuXQyZSlEWgbmOHd77dwCj5whd+yotu4JZHnuOwromAKSGCnJOrGfOspM4rfyQaR3H1coi
      CnBg6KAqcjISWPPmVF58wQ03Tzc8pkwleH0ql2s0j9jbDWDgQMgvvKZhjD8EG1uovXHjzlXK
      /UTsN2D2gok6XbFKfiwAexse1rF1GvWk7zSRfiJj8zvE149n+StP3z5kUBaTjz02uu6rJyoP
      svuzRlxnTWOYzoVUHIw7SKNLINPsu1itLKaAYTq3+75Mgyps/NiS+BifhP+FOfGVt5b3HTKR
      JR/H4TGo00SeJNHMGcL9r+A0biozF0UR8nA/DBUSDSUX+WT7hywKOMuCjyLws9E2JjHCxc2V
      PhsSSCp2wb/L7RUo9IAWCQk6nBgqDm2JQjXxQzXl7lRRroSCSGZ5RrYvNOjPIDtHPCbMZvIY
      B52nXKEHfXeHJmqrleR/kcbulE+5ajyZ9R/P59lOM0DXK67Thyu863m8faGeCQOtHXB2n8L0
      bk4530ki97NUrvR/kYg/dOPqf/OBeb2aB2ZVGUryiQxyo73HW6fKHd1fYLb3OBz6tXd4r/8v
      kVJxAsHB+7BZuZsVXTyEdrn+/Ae4hdfxbuoaPNT0lZS9GZ8VV5kVsx2/Qbq0pInSjGg27T3G
      ZWUtzYBBv6E4jhrLFN/JNCdNIIwOU4C1Gbw35z2qA+LZPLHTtV+ZQFDQGdzVvAdQSyoidlEA
      ey1XcXDVGK0zID3qu66OvO4fVJb+wMXPU0g5+h2G7u+wJtgVS52D+C8y1s4g7AdfoncGduPq
      3a4kOYhZKfas2bMCF13Pf2UCQUGJ2IcnsaIbQ6Z2EkWJ8wmIt2JV8l8YY9TrQyCJ8ykx5D6q
      ZgYGUNj489rEZo7HftY+K2FqhiUFFCnV71kx0AILciko1rUt+gx2XcDG6MOcTEsnPS2dtE92
      sXGxP6OGVFCcD8Pt7G61+1JcBKfNAwnpfPLfDYUtL/m60Jx5kWytG/ew77qgbzyAwY86M3ne
      RhJiN+Jc8B6z3jmESueGP4SrrzeWpZlc1PCbqCVlsS8lH2vvqbqf/EhkHUgkv5vPC7dTYDtp
      Gi4tGVy83Lqkl4dA1ym+1gx2FhrHzwMGWEBBMT9C66yP/e94Qi+ey7kqcNBU0oS+92LSovoy
      XxdZ8vSItsfCsv1sP1gNdBrKdJJ/87bbjZdHRn2NgXoaW19qa9DDvtPGxJFXg/04vegQp5Te
      ut/BjPpiTAON/9Zx+w5UaXEcbXBhmU837h2VR4hLa8TlzZd6dMe5xcgIY6C+obXDezkArQ+g
      1NVTD2pv+Tdu1IGFGQNuLlA4M87ThNCDR8j37vqWKymLKcaJaXfVO61KTh0i296bEIe2BYP8
      2J6m4VVmT4dAgEp1HUweYYDWmcse9p0ujPpiTAVV1YCO7ZcqK6jAHLP+3akIIJ8jqdkYeG7E
      3UT71rdKpSWTbejFRjcdZt40qazgOiY80tbhvTwEMsLFczwm5/cQn6dmDqY2g5Sj5Qyb6En7
      ZJ6Cp31mMbwigQ3JRXfO3khFJCWewWCsVzduqV2TihNYs7carwCfu3/noDxKzIlSmtStr81k
      Z+IVrL3GMULrznrWd9V5lylV2wAAibKvv6LYxB0Xx5vLLpAcc5mf1E2TSUUk7T5Ko7MXbt2c
      Jq1P30tC6QgCpz2t+wvN+tPsTVIyYtYMntZYqISjscc0HO+/yNwTx5XB3oxrO9befw/gHEz4
      JAXJIXNYfyKHioa2Xm6qpfBCDG/NCyPbIYSVL3U6/az9WL/SHdWuEJbHnqO4rVxTVTYJYSHE
      VHuwfH6neWEpi81T3XALTug0Jr7ARwvXkHChkJqO9WdsZN7ivfQJ3EToM/dgLGVqRfOnc/EO
      DOVvJ3IobZu2RGqg4lICyxeE87nVAlbf8TZZRWqoG26eH5DZYWlP+q4xL4a5vn4s/iiB9Kul
      7ceLRENNIWcjFxMcWYpH6NwOJ5cVxtdW8/K0+axJPkdhTUPbRaeJ2mtn2fjGa8RUexAe6tHp
      ey2JrK0v4uYZREKXzwYlHEjJABefLl5gqVfyWSIZuOIzVtvz1wCsmvcx18+f0Mhj5JTVtl18
      JBpU2SSEBRH+xWAWhM1heNux9vosEG0N+in/BIk7U7r9NWjnLyH7GD+M07hAQgKev2Narj49
      jElrz/H4ws4zN02UXtjHJwdO8UWH+h8eMYHAhUE8b9XN+T2NQ6Amqq6eJnl3CmdvfYlpQH9b
      Rzx85/NyV9OgBTHMDN5D/aQIUl7v/Kq/+33XVJXD6aP7OPXl9xSWl7WWoQ8mZkNwcJ3KfL/b
      pwZv1tNQcpFPE+M4/HUBZTWN3PqC1FvNl7f1pwnze49zjiHEr/O+41mldaYuC99tcQR2NYff
      FSmLzdNDyfKOJm6WbuPbpqocTqdGk5KRR0lVhxk+9zuP9T4FoDe0fWGo1/WP8cslkbXVh9BM
      DyLiFmn/1OIXpPXrTD1CYjbj3Y0r/P103/4+wH9cwRFSr45kYcyv6eQH6tM5mNYH3/eDf1Un
      f+v3WrmMfD3+V3PywwMbAImsY4cZ+Pr2X9WPAaA6dYBvJ4aR0o0vI38JpOzDHDZbyPZ7+Z6k
      FzzAQyBB0E78nWBB1kQABFkTARBkTQRAkDURAEHWRAAEWRMBEGRNBECQNREAQdZEAARZEwEQ
      ZE0EQJA1EQBB1kQABFkTARBkTQRAkDURAEHWRAAEWRMBEGRNBECQNREAQdZEAARZEwEQZE0E
      QJC1/wdFLntYXpEC3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      ARCOJgEQjiYBEI4mARCOJgEQjiYBEI52ub+pJByl27J4+plu6zolAOLSMA2L6om914yQXSDh
      aBIA4Wgj7gJZ7O9scZwvM5dJUqzUiKczFI8OUP0hIiEfAc1ECWdIS0ukuMRGDIBCZCrMUa5C
      Sze5ffsmm48fEs1cQ+kUaTerFHWVD+eD0hI5Rm97S+Qktu9oAbAMypUqHlXB59O4/+ARyZlZ
      ioebqIEwkXCMdFwhW6xyJRkBpCVyHN72lsi+ZgK9iytogNG2pqKxvHad5e+uibewcP5zbiY1
      /DlCXEJyECwcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxN
      AiAcTQIgHE0CIBztjVois6dnzM3EKZzViKf+0hIZJhr2EtAsCM1IS6S41EZuiUzEYzS6Cu2u
      xe1bL7ZEthpVCrrKh3PSEjlO0hI5fiO3RN77+hsSM7OE/C7uP3hEYubqeUukP0w0FCUdV6Ul
      csykJXL8Rm6J/OSvPn1+MzN3/nN+Jj2OmoSwjRwEC0eTAAhHkwAIR5MACEeTAAhHkwAIR5MA
      CEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHGzkAZr9LvdHGMvscHhxiWBblQo5qo02n
      08ay+jSbnXHWKsTYjdxdcXJ8RFU3CKomwWiUre0t+j0NzBL+gB/0Nqml9XHWKsTYjRyAzOwc
      zZ09+pZKLBaldHqCLzQPukG7WaXZUVj0aNISOUbSEjl+IwbA5HB3h2KxwrXVRR4+/JbZxVUK
      h9uogRiJ6TDLfjf5UpWMtESOjbREjt+IW1NlYfU6C6vnt5LTMwAkIrdfWMr/JpUJYQOZBRKO
      JgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjjbGAFjUq2Wa7S7dbhfL
      Muh0uuN7eSEuwNi+WmgabfYOTkHJEQz60Po60dlVfONagRAXYGwBsHotApE06KXzfgBdZd7n
      HtfLC3EhxrYLpHpjdCp7dNGIJdLcWM5wUqqO6+WFuBBjGwEURePm7fdeuC80rhcX4oIo1qBe
      xTH6S0ukqr482PRNi3Jrcl1WUz4Fn0t56f5h9VoW1HTTjtIG8rkUvK9RL0CrbHKx7/Bwbp+C
      J/h627dr89/DhQcAXv0GXUZS78UyTRNFUVCUl8NhN1u22o++OabB9u4eht6kXG//4EGLdrtD
      t1mj2f2+ib5WyZMv1X503fV6ffz1YnG4u8XT7f2Bj7bbbcy+TrXRen5ft11j/yj/o+u+mHp/
      ulLuiHLj+/dAbzfR++Md9VRVfYM/fovtp094urmNMYayLkeHtWVSzh8R9KjUDA+5/S3cwSge
      s0Ufhe2tI969NsdBrUM6Mc3ibJrTYpW+WcVv1Ng9LWH0NCLxGC6jRauvEfZCT/Hi1izOinm6
      qh+/2qXcNHhnffUNCzbIFyqsbdzgNHtAvlgllZ7GE4jQKud5/PQpt959h53DLIlkimvLC+Sy
      Oapdi35D48FODvp9/OEIMb9CsdYhPhWirvcI+tx06hVKjT6JiJeTQpWNjXXcmj2f8KVqFRo9
      en6VcrNPOuZH81lsH+wTS2XITMdtqWM4i47eJ301TTZ7zNVUiFy+Qa5SJZOcoliqkLkyw9FB
      jkAkwpTHolhrs75+HZf6cuguzbiZyMxTOjlAb9YIRGcwO010A5aXl5ifm2cq4GNp9TpWr4Vl
      GuSyWU7zpzRaOovXlgj64yj9Ont7WXr9Hi3dYGHuCvV6jZZusjSX4ezsjOPs8Riq1bh5c4Ot
      J0/I1VqsL6Y4zJ7S1rtUGzpzc/MkoyGuzC3hUkzAIpfP0yycUKzVSc2vEPAH8Wmwt7uPaRo0
      6k0WFheo1+tU6i2urS5SPTujUjil1bXn9DFmt85J/oyTkxxuj5d+t0OzUadSqtA1LY6zJ7bU
      8WMURUFVVeqNOka3Tb1eJ5jIUKs32NhYp5jbZyp5BavXYm9vF9MwMMzBw8XlGAEUlXgsihpw
      obunaBSPCcWTBL0uFMVFwGeha36CHg1PLI7Za3Pz/Y/wqzqNlo5P8zI9raBqAbwuDx3LQyIa
      QlUUUtNp6HfYP84TCoaY9UyNoWCTk+NjIqk06YiPzWyFG9dXONg/IBxL4DZblJt9ouEAlt+F
      ZfZY2bhDbMpDuVAi6HPjTyXRNIVwwE2p0WU6HsetqaSmU3hUi63dA8KhENMzLrxuez6ndN3g
      g1/9EqtVpdE1cHt8ROIxLFTanTapWMyWOl5NwefVKBRLZJJxto+KTKfSaP4g/miGZ882mZ9f
      4t6DXVavrZCIhCjVu7iG7Cb+P4xpzK9dJl6SAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
